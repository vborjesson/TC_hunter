#!/bin/bash
# NEXTFLOW TASK: extract_reads
set -e
set -u
NXF_DEBUG=${NXF_DEBUG:=0}; [[ $NXF_DEBUG > 1 ]] && set -x

nxf_env() {
    echo '============= task environment ============='
    env | sort | sed "s/\(.*\)AWS\(.*\)=\(.\{6\}\).*/\1AWS\2=\3xxxxxxxxxxxxx/"
    echo '============= task output =================='
}

nxf_kill() {
    declare -a ALL_CHILD
    while read P PP;do
        ALL_CHILD[$PP]+=" $P"
    done < <(ps -e -o pid= -o ppid=)

    walk() {
        [[ $1 != $$ ]] && kill $1 2>/dev/null || true
        for i in ${ALL_CHILD[$1]:=}; do walk $i; done
    }

    walk $1
}

nxf_mktemp() {
    local base=${1:-/tmp}
    if [[ $(uname) = Darwin ]]; then mktemp -d $base/nxf.XXXXXXXXXX
    else TMPDIR="$base" mktemp -d -t nxf.XXXXXXXXXX
    fi
}

on_exit() {
  exit_status=${ret:=$?}
  printf $exit_status > /jumbo/WorkingDir/B19-001/TC_hunter/work/7c/bcad022f042760c7c7a98adbf48292/.exitcode
  set +u
  [[ "$tee1" ]] && kill $tee1 2>/dev/null
  [[ "$tee2" ]] && kill $tee2 2>/dev/null
  [[ "$ctmp" ]] && rm -rf $ctmp || true
  exit $exit_status
}

on_term() {
    set +e
    [[ "$pid" ]] && nxf_kill $pid
}

trap on_exit EXIT
trap on_term TERM INT USR1 USR2

NXF_SCRATCH=''
[[ $NXF_DEBUG > 0 ]] && nxf_env
touch /jumbo/WorkingDir/B19-001/TC_hunter/work/7c/bcad022f042760c7c7a98adbf48292/.command.begin
set +u
nxf_module_load(){
  local mod=$1
  local ver=${2:-}
  local new_module="$mod"; [[ $ver ]] && new_module+="/$ver"

  if [[ ! $(module list 2>&1 | grep -o "$new_module") ]]; then
    old_module=$(module list 2>&1 | grep -Eow "$mod\/[^\( \n]+" || true)
    if [[ $ver && $old_module ]]; then
      module switch $old_module $new_module
    else
      module load $new_module
    fi
  fi
}

nxf_module_load samtools 1.9

set -u
[[ $NXF_SCRATCH ]] && echo "nxf-scratch-dir $HOSTNAME:$NXF_SCRATCH" && cd $NXF_SCRATCH

set +e
ctmp=$(set +u; nxf_mktemp /dev/shm 2>/dev/null || nxf_mktemp $TMPDIR)
cout=$ctmp/.command.out; mkfifo $cout
cerr=$ctmp/.command.err; mkfifo $cerr
tee .command.out < $cout &
tee1=$!
tee .command.err < $cerr >&2 &
tee2=$!
(
/bin/bash -ue /jumbo/WorkingDir/B19-001/TC_hunter/work/7c/bcad022f042760c7c7a98adbf48292/.command.sh
) >$cout 2>$cerr &
pid=$!
wait $pid || ret=$?
wait $tee1 $tee2
